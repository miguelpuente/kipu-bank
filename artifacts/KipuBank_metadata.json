{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_bankCap",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maxWithdrawPerTx",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "bankCap",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "attempted",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "currentBankBalance",
						"type": "uint256"
					}
				],
				"name": "BankCapExceeded",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "maxPerTx",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "attempted",
						"type": "uint256"
					}
				],
				"name": "ExceedsPerTxLimit",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "available",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "required",
						"type": "uint256"
					}
				],
				"name": "InsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ReentrantCall",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "TransferFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroValueNotAllowed",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newBalance",
						"type": "uint256"
					}
				],
				"name": "Deposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newBalance",
						"type": "uint256"
					}
				],
				"name": "Withdraw",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "bankCap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "contractBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "balance",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "depositCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "depositCountPerUser",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "getVaultBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "balance",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxWithdrawPerTx",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalBankBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"author": "Miguel Puente",
			"errors": {
				"BankCapExceeded(uint256,uint256,uint256)": [
					{
						"params": {
							"attempted": "Monto intentado (wei)",
							"bankCap": "Límite del banco (wei)",
							"currentBankBalance": "Balance actual (wei)"
						}
					}
				],
				"ExceedsPerTxLimit(uint256,uint256)": [
					{
						"params": {
							"attempted": "Monto solicitado (wei)",
							"maxPerTx": "Límite permitido (wei)"
						}
					}
				],
				"InsufficientBalance(uint256,uint256)": [
					{
						"params": {
							"available": "Balance disponible (wei)",
							"required": "Monto requerido (wei)"
						}
					}
				],
				"TransferFailed(address,uint256)": [
					{
						"params": {
							"amount": "Monto (wei)",
							"to": "Dirección destino"
						}
					}
				]
			},
			"events": {
				"Deposit(address,uint256,uint256)": {
					"params": {
						"account": "Dirección del depositante",
						"amount": "Monto depositado (en wei)",
						"newBalance": "Nuevo balance del usuario tras el depósito"
					}
				},
				"Withdraw(address,uint256,uint256)": {
					"params": {
						"account": "Dirección que realiza el retiro",
						"amount": "Monto retirado (en wei)",
						"newBalance": "Nuevo balance del usuario tras el retiro"
					}
				}
			},
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_bankCap": "Límite máximo de ETH (en wei) que puede almacenar el contrato",
						"_maxWithdrawPerTx": "Límite por retiro y por transacción (en wei)"
					}
				},
				"contractBalance()": {
					"returns": {
						"balance": "Balance del contrato en wei."
					}
				},
				"deposit()": {
					"details": "Utiliza el modificador `nonReentrant` y delega la lógica a la función privada `_deposit`."
				},
				"getVaultBalance(address)": {
					"params": {
						"account": "Dirección del usuario."
					},
					"returns": {
						"balance": "Balance en wei de la bóveda."
					}
				},
				"withdraw(uint256)": {
					"params": {
						"amount": "Monto a retirar en wei."
					}
				}
			},
			"title": "KipuBank - Vaults personales en ETH con límites y contadores",
			"version": 1
		},
		"userdoc": {
			"errors": {
				"BankCapExceeded(uint256,uint256,uint256)": [
					{
						"notice": "El depósito excede la capacidad total del banco"
					}
				],
				"ExceedsPerTxLimit(uint256,uint256)": [
					{
						"notice": "El retiro excede el límite máximo por transacción"
					}
				],
				"InsufficientBalance(uint256,uint256)": [
					{
						"notice": "Saldo insuficiente en la bóveda para la operación"
					}
				],
				"ReentrantCall()": [
					{
						"notice": "Llamada reentrante detectada"
					}
				],
				"TransferFailed(address,uint256)": [
					{
						"notice": "Falló la transferencia de ETH"
					}
				],
				"ZeroValueNotAllowed()": [
					{
						"notice": "No se permiten valores nulos (cero) para esta operación"
					}
				]
			},
			"events": {
				"Deposit(address,uint256,uint256)": {
					"notice": "Emitido cuando un usuario deposita ETH en su bóveda"
				},
				"Withdraw(address,uint256,uint256)": {
					"notice": "Emitido cuando un usuario retira ETH de su bóveda"
				}
			},
			"kind": "user",
			"methods": {
				"bankCap()": {
					"notice": "Límite global (inmutable) de ETH que el banco puede contener (wei)"
				},
				"constructor": {
					"notice": "Inicializa el límite global de depósito y el límite máximo de retiro por transacción"
				},
				"contractBalance()": {
					"notice": "Devuelve el balance total de ETH (wei) que el contrato posee (balance de la cuenta de contrato)."
				},
				"deposit()": {
					"notice": "Función principal para depositar ETH en la bóveda del remitente."
				},
				"depositCount()": {
					"notice": "Contador total de depósitos realizados"
				},
				"depositCountPerUser(address)": {
					"notice": "Contador de depósitos por usuario"
				},
				"getVaultBalance(address)": {
					"notice": "Devuelve el balance en wei de la bóveda de `account`."
				},
				"maxWithdrawPerTx()": {
					"notice": "Límite máximo por retiro y por transacción (inmutable) (wei)"
				},
				"totalBankBalance()": {
					"notice": "Suma de todos los saldos almacenados en `vaults`"
				},
				"withdraw(uint256)": {
					"notice": "Retira ETH de la bóveda del remitente."
				},
				"withdrawCount()": {
					"notice": "Contador total de retiros realizados"
				}
			},
			"notice": "Contrato educativo que implementa bóvedas de ETH personales con límites de depósito global y de retiro por transacción. Sigue buenas prácticas: errores personalizados, Checks-Effects-Interactions, guard contra reentrancy y manejo seguro de ETH.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/KipuBank.sol": "KipuBank"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/KipuBank.sol": {
			"keccak256": "0x0b92c72ab7f4996749f0947441c64334949ad30cf79cda175df03363acbfbbe4",
			"license": "MIT",
			"urls": [
				"bzz-raw://de0d6fbba94d781bcbc7d9897d14fd1e095e2a2f5935c19e8caa398474bf6dde",
				"dweb:/ipfs/Qmdj4qLAfGWa8CJfR9s2P69DfAQ7TceHih1ssqjNhEbmVD"
			]
		}
	},
	"version": 1
}